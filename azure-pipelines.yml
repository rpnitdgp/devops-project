resources:
  repositories:
  - repository: recipeapprepo
    type: github
    endpoint: rpnitdgp
    name: rpnitdgp/recipeapp
  - repository: devopsprojectrepo
    type: github
    endpoint: rpnitdgp
    name: rpnitdgp/devops-project

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - "rpnitdgp/recipeapp/**"

pool:
  name: 'selhostedravi'
  demands:
    - agent.name -equals selhostedagent

parameters:
- name: ciParametersFile
  default: 'devops-project-ci-parameters.yml'
  type: string

steps:
# Script to set up Java 20.0.2 manually (if not already installed)
- script: |
    echo "Setting up Java 20.0.2"
    wget https://download.java.net/java/GA/jdk20/2/GPL/openjdk-20.0.2_linux-x64_bin.tar.gz
    tar xzf openjdk-20.0.2_linux-x64_bin.tar.gz
    sudo mv jdk-20.0.2 /usr/local/
    echo "##vso[task.prependpath]/usr/local/jdk-20.0.2/bin"
    java -version
  displayName: 'Set up Java 20.0.2'

# Checkout code from Git repository
- checkout: recipeapprepo
  persistCredentials: true
  clean: true

# Checkout ARM templates from the second repository
- checkout: devopsprojectrepo
  persistCredentials: true
  clean: true
  path: devops-project # Checkout to a specific path

# Clean the project
- task: Maven@3
  inputs:
    mavenPomFile: '$(Build.SourcesDirectory)/recipeapp/pom.xml'
    goals: 'clean'
    mavenVersionOption: 'Custom'
    mavenDirectory: '/usr/local/apache-maven-3.9.6'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '20.0.2'
    jdkSourceOption: 'JDKVersion'
  displayName: 'Maven clean'

# Run unit tests
- task: Maven@3
  inputs:
    mavenPomFile: '$(Build.SourcesDirectory)/recipeapp/pom.xml'
    goals: 'test'
    mavenVersionOption: 'Custom'
    mavenDirectory: '/usr/local/apache-maven-3.9.6'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '20.0.2'
    jdkSourceOption: 'JDKVersion'
    mavenAuthenticateFeed: true
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
  displayName: 'Run Unit Tests'

# Run integration tests
- task: Maven@3
  inputs:
    mavenPomFile: '$(Build.SourcesDirectory)/recipeapp/pom.xml'
    goals: 'verify'
    mavenVersionOption: 'Custom'
    mavenDirectory: '/usr/local/apache-maven-3.9.6'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '20.0.2'
    jdkSourceOption: 'JDKVersion'
    mavenAuthenticateFeed: true
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
  displayName: 'Run Integration Tests'

# Package the application, skipping tests as they have already been run
- task: Maven@3
  inputs:
    mavenPomFile: '$(Build.SourcesDirectory)/recipeapp/pom.xml'
    goals: 'package'
    options: '-DskipTests'
    mavenVersionOption: 'Custom'
    mavenDirectory: '/usr/local/apache-maven-3.9.6'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '20.0.2'
    jdkSourceOption: 'JDKVersion'
    mavenAuthenticateFeed: true
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
  displayName: 'Maven package'

# Copy the WAR file to the staging directory
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/recipeapp/target'
    Contents: '*.war'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/drop'
  displayName: 'Copy WAR file to staging directory'

# Copy the parameter files from the second repository to the staging directory
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.BinariesDirectory)/devops-project/templates'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/drop'
  displayName: 'Copy parameter files to staging directory'

# Publish the build artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/drop'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish Artifact: drop'